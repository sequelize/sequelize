{
  "name": "@sequelize/monorepo",
  "private": true,
  "scripts": {
    "prepare": "husky",
    "publish-all": "lerna publish --conventional-commits --no-private --yes --create-release github",
    "format": "npm run format:eslint && npm run format:prettier",
    "format:eslint": "eslint . --fix --report-unused-disable-directives",
    "format:prettier": "prettier --write .",
    "test:format": "concurrently \"npm:test:format:*\"",
    "test:format:eslint": "eslint . --quiet --report-unused-disable-directives",
    "test:format:prettier": "prettier --check .",
    "test-typings": "lerna run test-typings",
    "test-exports": "lerna run test-exports",
    "test-unit": "yarn test-unit-esm && lerna run test-unit",
    "test-unit-esm": "mocha test/esm-named-exports.test.js",
    "test-integration-mariadb": "yarn lerna run test-integration-mariadb",
    "test-integration-mysql": "yarn lerna run test-integration-mysql",
    "test-integration-postgres": "yarn lerna run test-integration-postgres",
    "test-integration-postgres-native": "yarn lerna run test-integration-postgres-native",
    "test-integration-sqlite": "yarn lerna run test-integration-sqlite",
    "test-integration-mssql": "yarn lerna run test-integration-mssql",
    "test-integration-db2": "yarn lerna run test-integration-db2",
    "test-integration-ibmi": "yarn lerna run test-integration-ibmi",
    "test-integration-snowflake": "yarn lerna run test-integration-snowflake",
    "sync-exports": "lerna run sync-exports",
    "build": "lerna run build",
    "docs": "typedoc",
    "delete-changelog": "node dev/delete-changelog.mjs",
    "fix-commit": "export TMPFILE=$(mktemp) && grep -v '^#' $(git rev-parse --git-dir)/COMMIT_EDITMSG > $TMPFILE && git commit -e -F $TMPFILE",
    "------------------------------------- local test dbs --------------------------------------": "",
    "reset-mariadb": "bash dev/mariadb/oldest/reset.sh; bash dev/mariadb/latest/reset.sh",
    "reset-mysql": "bash dev/mysql/oldest/reset.sh; bash dev/mysql/latest/reset.sh",
    "reset-postgres": "bash dev/postgres/oldest/reset.sh; bash dev/postgres/latest/reset.sh",
    "reset-mssql": "bash dev/mssql/oldest/reset.sh; bash dev/mssql/latest/reset.sh",
    "reset-db2": "bash dev/db2/oldest/reset.sh; bash dev/db2/latest/reset.sh",
    "reset-all": "concurrently \"npm:reset-*(!all)\"",
    "start-mariadb-oldest": "bash dev/mariadb/oldest/start.sh",
    "start-mariadb-latest": "bash dev/mariadb/latest/start.sh",
    "start-mysql-oldest": "bash dev/mysql/oldest/start.sh",
    "start-mysql-latest": "bash dev/mysql/latest/start.sh",
    "start-postgres-oldest": "bash dev/postgres/oldest/start.sh",
    "start-postgres-latest": "bash dev/postgres/latest/start.sh",
    "start-mssql-oldest": "bash dev/mssql/oldest/start.sh",
    "start-mssql-latest": "bash dev/mssql/latest/start.sh",
    "start-db2-oldest": "bash dev/db2/oldest/start.sh",
    "start-db2-latest": "bash dev/db2/latest/start.sh",
    "start-oldest": "concurrently \"npm:start-*-oldest\"",
    "start-latest": "concurrently \"npm:start-*-latest\"",
    "stop-mariadb": "bash dev/mariadb/oldest/stop.sh; bash dev/mariadb/latest/stop.sh",
    "stop-mysql": "bash dev/mysql/oldest/stop.sh; bash dev/mysql/latest/stop.sh",
    "stop-postgres": "bash dev/postgres/oldest/stop.sh; bash dev/postgres/latest/stop.sh",
    "stop-mssql": "bash dev/mssql/oldest/stop.sh; bash dev/mssql/latest/stop.sh",
    "stop-db2": "bash dev/db2/oldest/stop.sh; bash dev/db2/latest/stop.sh",
    "stop-all": "concurrently \"npm:stop-*(!all)\"",
    "----------------------------------------- SSCCEs ------------------------------------------": "",
    "sscce": "ts-node sscce.ts",
    "sscce-mariadb": "cross-env DIALECT=mariadb yarn sscce",
    "sscce-mysql": "cross-env DIALECT=mysql yarn sscce",
    "sscce-postgres": "cross-env DIALECT=postgres yarn sscce",
    "sscce-postgres-native": "cross-env DIALECT=postgres-native yarn sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite yarn sscce",
    "sscce-mssql": "cross-env DIALECT=mssql yarn sscce",
    "sscce-db2": "cross-env DIALECT=db2 yarn sscce"
  },
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@ephys/eslint-config-typescript": "20.1.2",
    "@rushstack/eslint-patch": "1.10.1",
    "@sequelize/utils": "workspace:*",
    "@types/chai": "4.3.14",
    "@types/lodash": "4.17.0",
    "@types/mocha": "10.0.6",
    "@types/node": "20.12.4",
    "chai": "4.4.1",
    "concurrently": "8.2.2",
    "cross-env": "7.0.3",
    "esbuild": "0.17.19",
    "eslint": "8.57.0",
    "eslint-plugin-jsdoc": "48.2.2",
    "eslint-plugin-mocha": "10.4.1",
    "fast-glob": "3.3.2",
    "husky": "9.0.11",
    "lerna": "8.1.2",
    "lint-staged": "15.2.2",
    "lodash": "4.17.21",
    "markdownlint-cli": "0.39.0",
    "mocha": "10.4.0",
    "node-gyp": "10.1.0",
    "node-hook": "1.0.0",
    "nx": "18.2.2",
    "prettier": "3.2.5",
    "prettier-plugin-organize-imports": "3.2.4",
    "source-map-support": "0.5.21",
    "ts-node": "10.9.2",
    "typedoc": "0.25.12",
    "typedoc-plugin-carbon-ads": "1.6.0",
    "typedoc-plugin-mdn-links": "3.1.19",
    "typedoc-plugin-missing-exports": "2.2.0",
    "typescript": "5.4.3"
  },
  "packageManager": "yarn@4.1.1",
  "lint-staged": {
    "*.{js,mjs,cjs,ts,mts,cts}": "eslint --fix --report-unused-disable-directives",
    "*": "prettier --write --ignore-unknown"
  }
}
