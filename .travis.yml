sudo: false
dist: trusty

language: node_js

branches:
  only:
    - master
    - v3
    - /^greenkeeper/.*$/
  except:
    - /^v\d+\.\d+\.\d+$/

cache:
  directories:
    - $HOME/.npm

env:
  global:
    # mysql info
    - SEQ_MYSQL_DB=sequelize_test
    - SEQ_MYSQL_USER=sequelize_test
    - SEQ_MYSQL_PW=sequelize_test
    - SEQ_MYSQL_HOST=127.0.0.1
    - SEQ_MYSQL_PORT=8999
    # postgres info
    - SEQ_PG_DB=sequelize_test
    - SEQ_PG_USER=sequelize_test
    - SEQ_PG_PW=sequelize_test
    - SEQ_PG_HOST=127.0.0.1
    - SEQ_PG_PORT=8998

before_script:
  # mount ramdisk
  - "if [ $POSTGRES_VER ]; then sudo mkdir /mnt/sequelize-postgres-ramdisk; fi"
  - "if [ $POSTGRES_VER ]; then sudo mount -t ramfs tmpfs /mnt/sequelize-postgres-ramdisk; fi"
  - "if [ $MYSQL_VER ]; then sudo mkdir /mnt/sequelize-mysql-ramdisk; fi"
  - "if [ $MYSQL_VER ]; then sudo mount -t ramfs tmpfs /mnt/sequelize-mysql-ramdisk; fi"

  # setup docker
  - "if [ $POSTGRES_VER ] || [ $MYSQL_VER ]; then docker-compose up -d ${POSTGRES_VER} ${MYSQL_VER}; fi"
  - "if [ $MYSQL_VER ]; then docker run --link ${MYSQL_VER}:db -e CHECK_PORT=3306 -e CHECK_HOST=db --net sequelize_default giorgos/takis; fi"
  - "if [ $POSTGRES_VER ]; then docker run --link ${POSTGRES_VER}:db -e CHECK_PORT=5432 -e CHECK_HOST=db --net sequelize_default giorgos/takis; fi"

script:
  - npm run lint
  - "if [ $COVERAGE ]; then npm run cover && bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info; else npm run test; fi"

jobs:
  include:
    - stage: test
      node_js: '4'
      env: DIALECT=sqlite COVERAGE=true
    - stage: test
      node_js: '4'
      sudo: required
      env: MYSQL_VER=mysql-57 DIALECT=mysql COVERAGE=true
    - stage: test
      node_js: '4'
      sudo: required
      env: POSTGRES_VER=postgres-95 DIALECT=postgres COVERAGE=true
    - stage: test
      node_js: '4'
      sudo: required
      env: POSTGRES_VER=postgres-95 DIALECT=postgres-native COVERAGE=true
    - stage: test
      node_js: '8'
      env: DIALECT=sqlite
    - stage: test
      node_js: '6'
      env: DIALECT=sqlite
    - stage: release
      node_js: '8'
      script:
        - npm run semantic-release
      before_deploy:
        - npm run docs
      deploy:
        provider: surge
        project: ./esdoc/
        domain: docs.sequelizejs.com
        skip_cleanup: true

stages:
  - test
  - name: release
    if: branch = master AND type = push AND fork = false
